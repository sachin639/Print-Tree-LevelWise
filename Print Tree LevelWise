import java.util.*;
public class Solution {

	public static void printLevelWise(BinaryTreeNode<Integer> root) {
		
		Queue <BinaryTreeNode<Integer>> pendingChildren = new LinkedList <BinaryTreeNode<Integer>>();
		pendingChildren.add(root);
	
		while(!pendingChildren.isEmpty()){
			BinaryTreeNode<Integer> front = pendingChildren.poll();
			System.out.print(front.data + ":");
			if(front.left==null){
				System.out.print("L"+":"+-1+",");
			}else{
				BinaryTreeNode <Integer> leftChild = front.left;
			    System.out.print("L"+":"+leftChild.data+",");
			    pendingChildren.add(leftChild);
			}
			if(front.right==null){
				System.out.print("R"+":"+-1);
			}else{
				BinaryTreeNode<Integer> rightChild = front.right;
			    System.out.print("R"+":"+rightChild.data);
		        pendingChildren.add(rightChild);
			}
			System.out.println();

		}
	}
	
}
